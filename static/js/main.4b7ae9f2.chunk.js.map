{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","onBlur","NewMovie","onAdd","defaulData","count","setCount","movieData","setMovieData","setTitle","useEffect","trim","addNewMovie","event","target","prev","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovie","movieNew","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b7ae9f2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movieNew: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const defaulData = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [count, setCount] = useState(0);\n  const [movieData, setMovieData] = useState(false);\n  const [movie, setTitle] = useState(defaulData);\n\n  const clearMovie = () => {\n    setTitle(defaulData);\n  };\n\n  useEffect(() => {\n    if (\n      movie.title.trim()\n      && movie.description.trim()\n      && movie.imgUrl.trim()\n      && movie.imdbUrl.trim()\n      && movie.imdbId.trim()\n    ) {\n      setMovieData(true);\n\n      return;\n    }\n\n    setMovieData(false);\n  },\n  [\n    movie.title,\n    movie.description,\n    movie.imgUrl,\n    movie.imdbUrl,\n    movie.imdbId,\n  ]);\n\n  const addNewMovie = (event:React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setTitle((prev:Movie) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const onAddMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onAdd(movie);\n    clearMovie();\n    setCount(prev => prev + 1);\n  };\n\n  return (\n    <form\n      onSubmit={onAddMovie}\n      className=\"NewMovie\"\n      key={count}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={addNewMovie}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={addNewMovie}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={addNewMovie}\n        required\n\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={addNewMovie}\n        required\n\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={addNewMovie}\n        required\n\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!movieData}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movie, setMovie] = useState(moviesFromServer);\n\n  const addMovie = (movieNew: Movie) => setMovie(\n    prev => [...prev, movieNew],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movie} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}